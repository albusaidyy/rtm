name: Generate Staging APK

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: "3.29.0"

      - name: Flutter version
        run: flutter --version

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "temurin"

      - name: Install Dependencies
        run: flutter packages get

      - name: Format
        run: dart format --set-exit-if-changed lib test

      - name: Code Generation
        run: flutter packages run build_runner build --delete-conflicting-outputs

      - name: Analyze
        run: flutter analyze lib

      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: key.jks
          encodedString: ${{ secrets.RELEASE_KEYSTORE }}

      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.RELEASE_KEYSTORE_PASSPHRASE }}" >> android/key.properties
          echo "keyPassword=${{ secrets.RELEASE_KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.RELEASE_KEYSTORE_ALIAS }}" >> android/key.properties

      - name: Build APK
        run: flutter build apk  --flavor staging --target lib/main_staging.dart

      - uses: actions/upload-artifact@v4
        with:
          name: staging-apk
          path: build/app/outputs/flutter-apk/app-staging-release.apk

      - name: Report Status
        if: always()
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }}
          notification_title: "{repo}"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
